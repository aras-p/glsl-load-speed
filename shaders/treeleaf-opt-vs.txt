varying vec2 xlv_TEXCOORD3;
varying vec3 xlv_TEXCOORD2;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_COLOR0;
varying vec2 xlv_TEXCOORD0;
attribute vec4 TANGENT;
uniform vec4 unity_Scale;
uniform mat4 glstate_matrix_mvp;
uniform mat4 glstate_matrix_invtrans_modelview0;
uniform vec4 _WorldSpaceLightPos0;
uniform vec3 _WorldSpaceCameraPos;
uniform mat4 _World2Object;
uniform vec4 _Wind;
uniform vec4 _Time;
uniform vec4 _SquashPlaneNormal;
uniform float _SquashAmount;
uniform vec4 _Scale;
uniform mat4 _Object2World;
uniform vec4 _MainTex_ST;
uniform mat4 _LightMatrix0;
void main ()
{
  vec4 tmpvar_1;
  vec4 tmpvar_2;
  float tmpvar_3;
  tmpvar_3 = (1.0 - abs (TANGENT.w));
  vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = gl_Normal;
  vec4 tmpvar_5;
  tmpvar_5.w = 0.0;
  tmpvar_5.xyz = TANGENT.xyz;
  vec4 tmpvar_6;
  tmpvar_6.zw = vec2(0.0, 0.0);
  tmpvar_6.xy = gl_Normal.xy;
  vec4 tmpvar_7;
  tmpvar_7 = (gl_Vertex + ((tmpvar_6 * glstate_matrix_invtrans_modelview0) * tmpvar_3));
  vec3 tmpvar_8;
  tmpvar_8 = mix (gl_Normal, normalize ((tmpvar_4 * glstate_matrix_invtrans_modelview0)).xyz, vec3(tmpvar_3));
  vec4 tmpvar_9;
  tmpvar_9.w = -1.0;
  tmpvar_9.xyz = normalize ((tmpvar_5 * glstate_matrix_invtrans_modelview0)).xyz;
  vec4 tmpvar_10;
  tmpvar_10 = mix (TANGENT, tmpvar_9, vec4(tmpvar_3));
  tmpvar_1 = tmpvar_7;
  tmpvar_2 = tmpvar_10;
  tmpvar_1.xyz = (tmpvar_7.xyz * _Scale.xyz);
  vec4 pos_i0;
  pos_i0 = tmpvar_1;
  vec3 bend;
  float tmpvar_11;
  tmpvar_11 = (dot (_Object2World[3].xyz, vec3(1.0, 1.0, 1.0)) + gl_Color.x);
  vec2 tmpvar_12;
  tmpvar_12.x = dot (tmpvar_1.xyz, vec3((gl_Color.y + tmpvar_11)));
  tmpvar_12.y = tmpvar_11;
  vec4 tmpvar_13;
  tmpvar_13 = abs (((fract ((((fract (((_Time.yy + tmpvar_12).xxyy * vec4(1.975, 0.793, 0.375, 0.193))) * 2.0) - 1.0) + 0.5)) * 2.0) - 1.0));
  vec4 tmpvar_14;
  tmpvar_14 = ((tmpvar_13 * tmpvar_13) * (3.0 - (2.0 * tmpvar_13)));
  vec2 tmpvar_15;
  tmpvar_15 = (tmpvar_14.xz + tmpvar_14.yw);
  bend = ((gl_Color.y * 0.1) * tmpvar_8);
  bend.y = (gl_MultiTexCoord1.y * 0.3);
  pos_i0.xyz = (tmpvar_1.xyz + (((tmpvar_15.xyx * bend) + ((_Wind.xyz * tmpvar_15.y) * gl_MultiTexCoord1.y)) * _Wind.w));
  pos_i0.xyz = (pos_i0.xyz + (gl_MultiTexCoord1.x * _Wind.xyz));
  vec3 tmpvar_16;
  tmpvar_16 = mix ((pos_i0.xyz - ((dot (_SquashPlaneNormal.xyz, pos_i0.xyz) + _SquashPlaneNormal.w) * _SquashPlaneNormal.xyz)), pos_i0.xyz, vec3(_SquashAmount));
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = tmpvar_16;
  tmpvar_1 = tmpvar_17;
  vec4 tmpvar_18;
  tmpvar_18.xyz = vec3(1.0, 1.0, 1.0);
  tmpvar_18.w = gl_Color.w;
  vec3 tmpvar_19;
  tmpvar_19 = normalize (tmpvar_8);
  tmpvar_2.xyz = normalize (tmpvar_10.xyz);
  vec3 tmpvar_20;
  tmpvar_20 = (cross (tmpvar_19, tmpvar_2.xyz) * tmpvar_10.w);
  mat3 tmpvar_21;
  tmpvar_21[0].x = tmpvar_2.x;
  tmpvar_21[0].y = tmpvar_20.x;
  tmpvar_21[0].z = tmpvar_19.x;
  tmpvar_21[1].x = tmpvar_2.y;
  tmpvar_21[1].y = tmpvar_20.y;
  tmpvar_21[1].z = tmpvar_19.y;
  tmpvar_21[2].x = tmpvar_2.z;
  tmpvar_21[2].y = tmpvar_20.z;
  tmpvar_21[2].z = tmpvar_19.z;
  vec4 tmpvar_22;
  tmpvar_22.w = 1.0;
  tmpvar_22.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * tmpvar_17);
  xlv_TEXCOORD0 = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  xlv_COLOR0 = tmpvar_18;
  xlv_TEXCOORD1 = (tmpvar_21 * (_World2Object * _WorldSpaceLightPos0).xyz);
  xlv_TEXCOORD2 = (tmpvar_21 * (((_World2Object * tmpvar_22).xyz * unity_Scale.w) - tmpvar_16));
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * tmpvar_17)).xy;
}

